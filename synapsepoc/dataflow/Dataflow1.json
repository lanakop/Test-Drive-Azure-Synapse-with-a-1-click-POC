{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CosmosDbSqlApiCollection2",
						"type": "DatasetReference"
					},
					"name": "cosmosdb"
				}
			],
			"sinks": [],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          resourceType as string,",
				"          meta as (versionId as integer, lastUpdated as string, tag as (system as string, code as string)[], security as (system as string, code as string, display as string)[]),",
				"          identifier as (use as string, type as (coding as (system as string, code as string, display as string)[]), system as string, value as string)[],",
				"          extension as (url as string, valueCoding as (code as string, display as string))[],",
				"          status as string,",
				"          notGiven as boolean,",
				"          vaccineCode as (coding as (system as string, code as string, display as string)[], text as string),",
				"          patient as (reference as string, display as string),",
				"          date as string,",
				"          {_dateDTO} as string,",
				"          primarySource as boolean,",
				"          reportOrigin as (coding as (code as string, display as string)[]),",
				"          location as (display as string, reference as string),",
				"          manufacturer as (reference as string, identifier as (system as string, value as string), display as string),",
				"          lotNumber as string,",
				"          expirationDate as string,",
				"          {_expirationDateDT} as string,",
				"          site as (coding as (display as string)[]),",
				"          route as (coding as (display as string)[]),",
				"          doseQuantity as (value as double, unit as string, system as string, code as string),",
				"          practitioner as (actor as (display as string))[],",
				"          note as (text as string)[],",
				"          vaccinationProtocol as (targetDisease as (coding as (display as string)[])[], doseStatus as (coding as (system as string, code as string, display as string)[]), doseStatusReason as (coding as (display as string)[]))[],",
				"          {_active} as boolean,",
				"          {_pkey} as string,",
				"          {_docId} as string,",
				"          reaction as string[],",
				"          explanation as (reason as (coding as (display as string)[])[]),",
				"          text as (status as string, div as string),",
				"          encounter as (reference as string, identifier as (system as string, value as string))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'document') ~> cosmosdb"
			]
		}
	}
}